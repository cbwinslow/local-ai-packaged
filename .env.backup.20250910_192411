# Change the name of this file to .env after updating it!

############
# [required] 
# n8n credentials - use the command `openssl rand -hex 32` to generate both
#   openssl is available by default on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
#   Or run the command: python -c "import secrets; print(secrets.token_hex(32))"
############

N8N_ENCRYPTION_KEY=27b4c534419334499296eaeaad577fdf011b341142cc3c89b4a1fd752c7eff3a
N8N_USER_MANAGEMENT_JWT_SECRET=72030c09fe3da8d40322374ede4541142a18938120aab2a6211eef1250f73530


############
# [required]
# Supabase Secrets

# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
# Read these docs for any help: https://supabase.com/docs/guides/self-hosting/docker
# For the JWT Secret and keys, see: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# For the other secrets, see: https://supabase.com/docs/guides/self-hosting/docker#update-secrets
# You can really decide any value for POOLER_TENANT_ID like 1000.

# Note that using special symbols (like '%') can complicate things a bit for your Postgres password.
# If you use special symbols in your Postgres password, you must remember to percent-encode your password later if using the Postgres connection string, for example, postgresql://postgres.projectref:p%3Dword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
############

POSTGRES_PASSWORD=tLOk4rE9tXWVp000RiNtZ6gW3mjkO3vpssxu2JUP7g
JWT_SECRET=a88def8ee7e5675ccda45a2efe8cffc1355126fbcd097e91616b4b522cdd23a3
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNjM5MjM5NTU3LCJleHAiOjE5NTQ4MDM1NTd9.MZwZmr7ei9xuy2pr2X61rvb-WknmrbO9ik9bvS78JgU
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJvbGUiOiJzZXJ2aWNlX3JvbGUiLCJpYXQiOjE2MzkyMzk1NTcsImV4cCI6MTk1NDgwMzU1N30.pvL7n245Wa3IEg2zeNK-WWLGYt3KVhvyMzGgAGQh9B4
DASHBOARD_USERNAME=fd3fe3735f5a7598
DASHBOARD_PASSWORD=mo3xOCOflyybuPOqK1pDYwqSv7bAdftX
POOLER_TENANT_ID=2303

############
# [required]
# Neo4j username and password
# Replace "neo4j" with your chosen username and "password" with your chosen password.
# Keep the "/" as a separator between the two.
############

NEO4J_AUTH=neo4j/ChgB9miS1pAUn1cSirY4U6LVyTZG62ae

############
# [required]
# Langfuse credentials
# Each of the secret keys you can set to whatever you want, just make it secure!
# For the encryption key, use the command `openssl rand -hex 32`
#   openssl is available by defualt on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
############

CLICKHOUSE_PASSWORD=JquLpJy5ppkJawlCNecXqg8Y4934Iwk
MINIO_ROOT_PASSWORD=gTP7hSHuKNjo8noJA5d7OkQMAyh5g6L
LANGFUSE_SALT=2b6249525b3ef1f792288ca7864c4507d6f8d02cfda5b0165d87f9a2a0fa8955
NEXTAUTH_SECRET=2da9fe905ebb6f26e9861268a58c56c69a66ea11e57ea65d8d8ba22e4920f690
ENCRYPTION_KEY=087a98dc3b771b93517ec18c26cd2163adcebcc20fe75145e12bfc8b61116355

############
# [required for prod]
# Domain Configuration

# By default listen on https://localhost:[service port] and don't use an email for SSL
# To change this for production:
# Uncomment all of these environment variables for the services you want exposed
# Note that you might not want to expose Ollama or SearXNG since they aren't secured by default
# Replace the placeholder value with the host for each service (like n8n.yourdomain.com)
# Replace internal by your email (require to create a Let's Encrypt certificate)
############

# Base domain for all services (used for automatic subdomain generation)
# BASE_DOMAIN=yourdomain.com

# Individual service domains
# N8N_HOSTNAME=n8n.yourdomain.com
# WEBUI_HOSTNAME=openwebui.yourdomain.com
# FLOWISE_HOSTNAME=flowise.yourdomain.com
# SUPABASE_HOSTNAME=supabase.yourdomain.com
# LANGFUSE_HOSTNAME=langfuse.yourdomain.com
# OLLAMA_HOSTNAME=ollama.yourdomain.com
# SEARXNG_HOSTNAME=searxng.yourdomain.com
# NEO4J_HOSTNAME=neo4j.yourdomain.com
# AGENTIC_HOSTNAME=agentic.yourdomain.com
# FRONTEND_HOSTNAME=yourdomain.com
# LETSENCRYPT_EMAIL=internal

############
# [NEW] Frontend Configuration
############
FRONTEND_TITLE=Local AI Package
FRONTEND_DESCRIPTION=Self-hosted AI Development Environment



# Everything below this point is optional.
# Default values will suffice unless you need more features/customization.

   #
   #
#######
 #####
   #

############
# Optional Google Authentication for Supabase
# Get these values from the Google Admin Console
############
# ENABLE_GOOGLE_SIGNUP=true
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GOOGLE_REDIRECT_URI=

############
# Optional SearXNG Config
# If you run a very small or a very large instance, you might want to change the amount of used uwsgi workers and threads per worker
# More workers (= processes) means that more search requests can be handled at the same time, but it also causes more resource usage
############

# SEARXNG_UWSGI_WORKERS=4
# SEARXNG_UWSGI_THREADS=4

############
# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres
POSTGRES_USER=postgres

############
# Supavisor -- Database pooler and others that can be left as default values
############
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE=4d972b7c5e4677efc214f20887800325676a993e705550d0fcb70f8a457c283472f9cf4d4de59d215653383c9d629e00981410da5909907eae24ad2a0479a748
VAULT_ENC_KEY=9329d9af1b2d741e9c831af22fdad2fc78e0e49d024cfaafb2c62b82f4e8a8d8
# Pool size for internal metadata storage used by Supavisor
# This is separate from client connections and used only by Supavisor itself
POOLER_DB_POOL_SIZE=5

############
# AI Tools Configuration
# Add your API keys and configuration for AI tools below
############

# OpenAI API Key (required for CrewAI, Llama Stack, etc.)
OPENAI_API_KEY=your_openai_api_key_here

# SerpAPI Key (optional, for web search functionality)
SERPAPI_API_KEY=your_serpapi_key_here

# Letta API Key
LETTA_API_KEY=your_letta_api_key_here

# GraphRAG API Key
GRAPHRAG_API_KEY=your_graphrag_api_key_here

# MCP Crawl4AI API Key
CRAWL4AI_API_KEY=your_crawl4ai_api_key_here

# Service Ports (modify only if default ports conflict with other services)
GRAPHITE_PORT=8080
LIBSQL_PORT=8081
NEO4J_HTTP_PORT=7474
NEO4J_BOLT_PORT=7687
CREWAI_PORT=8000
LETTA_PORT=8001
FALKOR_PORT=6379
GRAPHRAG_PORT=8002
LLAMA_PORT=8003
CRAWL4AI_PORT=8004

# Neo4j Configuration (for mcp-neo4j-agent-memory)
NEO4J_URI=bolt://neo4j:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=your_neo4j_password_here

# libSQL Configuration (for mcp-memory-libsql)
LIBSQL_URL=http://libsql:8080

# CrewAI Configuration
CREWAI_MODEL=gpt-4
CREWAI_TEMPERATURE=0.7
CREWAI_MAX_TOKENS=4000

# Letta Configuration
LETTA_STORAGE_PATH=/data
LETTA_MAX_MEMORY_ITEMS=10000

# GraphRAG Configuration
GRAPHRAG_STORAGE_PATH=/data
GRAPHRAG_EMBEDDING_MODEL=text-embedding-ada-002

# Falkor Configuration
FALKOR_URL=redis://falkor:6379
FALKOR_MAX_CONNECTIONS=100

# MCP Crawl4AI Configuration
CRAWL4AI_STORAGE_PATH=/data
CRAWL4AI_MAX_DEPTH=3
CRAWL4AI_MAX_PAGES=100


############
# API Proxy - Configuration for the Kong Reverse proxy.
############

KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443


############
# API - Configuration for PostgREST.
############

PGRST_DB_SCHEMAS=public,storage,graphql_public

############
# Flowise - Authentication Configuration for Flowise.
############
#FLOWISE_USERNAME=your_username
#FLOWISE_PASSWORD=your_password


############
# Auth - Configuration for the GoTrue authentication server.
############

## General
SITE_URL=http://localhost:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://localhost:8000

## Mailer Config
MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=true
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=supabase-mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender
ENABLE_ANONYMOUS_USERS=false

## Phone auth
ENABLE_PHONE_SIGNUP=true
ENABLE_PHONE_AUTOCONFIRM=true


############
# Studio - Configuration for the Dashboard
############

STUDIO_DEFAULT_ORGANIZATION=Default Organization
STUDIO_DEFAULT_PROJECT=Default Project

STUDIO_PORT=3000
# replace if you intend to use Studio outside of localhost
SUPABASE_PUBLIC_URL=http://localhost:8000

# Enable webp support
IMGPROXY_ENABLE_WEBP_DETECTION=true

# Add your OpenAI API key to enable SQL Editor Assistant
OPENAI_API_KEY=


############
# Functions - Configuration for Functions
############
# NOTE: VERIFY_JWT applies to all functions. Per-function VERIFY_JWT is not supported yet.
FUNCTIONS_VERIFY_JWT=false


############
# Logs - Configuration for Analytics
# Please refer to https://supabase.com/docs/reference/self-hosting-analytics/introduction
############

# Change vector.toml sinks to reflect this change
# these cannot be the same value
LOGFLARE_PUBLIC_ACCESS_TOKEN=265c19c4f94093ea1b1ba3fdabffbdfdf33fac0792470e058ef7faf57c479138
LOGFLARE_PRIVATE_ACCESS_TOKEN=c9a599f14604d09631f3d9ba822c188edb209cd6f171d9508d62025c38dc0464

# Docker socket location - this value will differ depending on your OS
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Google Cloud Project details
GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID
GOOGLE_PROJECT_NUMBER=GOOGLE_PROJECT_NUMBER
GRAYLOG_PASSWORD=ZcdBy6guQ3kbV15O1Wq2JVVVS0vblA0P
RABBITMQ_USER=0ec7a7816dd77536
RABBITMQ_PASS=ADlSyge6GJG7EmZP8u5i1yinaTcfVy8
FLOWISE_USERNAME=c30824c10866554c
FLOWISE_PASSWORD=t5ToN55vbXxCTghGc1WSJ6MHVxaX9a
LOCALAI_API_KEY=6254594dd833f2ffab2ba5a1f456d839b265a8047f06a66a49f9b7ef4f492ba3
SEARXNG_SECRET_KEY=LLkX8gTOug2BKqTj7pnN8Dh8qds6DvHm
# Supabase Secrets
POSTGRES_PASSWORD=2elNWZztYHowT8w97krOmn/74PgsL1aCyjSgI2qcHTw=
JWT_SECRET=2681c0115682d8b06f5207353ad15ab710abe84d81c8d0b414a2d00170d70038
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsLWFpLXBhY2thZ2VkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU2OTg3MjAsInN1YiI6ImxvY2FsLWFpLXBhY2thZ2VkIn0.ZTYzMzZhNjlkMWE2NjgyNz
M2VkMGViNw
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzIsIsInJlZiI6ImxvY2FsLWFpLXBhY2thZ2VkIiwicm9sZSI6InNlcnZpY2UiLCJpYXQiOjE3MjU2OTg3MjAsInN1YiI6ImxvY2FsLWFpLXBhY2thZ2VkIn0.ZDEwZGI5YjM1MmI4ZDE0Nz
YTA4MDIyMg
DASHBOARD_USERNAME=admin
DASHBOARD_PASSWORD=2sZ2GE0dEsFT+gAl
