# This file has been updated with proper configuration for Supabase

############
# [required] 
# n8n credentials - use the command `openssl rand -hex 32` to generate both
#   openssl is available by default on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
#   Or run the command: python -c "import secrets; print(secrets.token_hex(32))"
############

N8N_ENCRYPTION_KEY=2c554b836c1b364e3038b5396e09bdaddc3b2a90d8bb4ee9133dab1eff26e286
N8N_USER_MANAGEMENT_JWT_SECRET=bbe173a42f2babe6d84f74c96abce66d0e88fbb9781535b90ea7cf0e9129e3ec

BITWARDEN_EMAIL=blaine.winslow@gmail.com
BITWARDEN_PASSWORD=bitwardenCBW89pass
############
# [required]
# Supabase Secrets

# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
# Read these docs for any help: https://supabase.com/docs/guides/self-hosting/docker
# For the JWT Secret and keys, see: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# For the other secrets, see: https://supabase.com/docs/guides/self-hosting/docker#update-secrets
# You can really decide any value for POOLER_TENANT_ID like 1000.

# Note that using special symbols (like '%') can complicate things a bit for your Postgres password.
# If you use special symbols in your Postgres password, you must remember to percent-encode your password later if using the Postgres connection string, for example, postgresql://postgres.projectref:p%3Dword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
############

POSTGRES_PASSWORD=Yn5SI9vFSDUZhVZDCvimhlapUZhh5F9xaXmAr0fSVQ
JWT_SECRET=5f6daad48a51082a8c05227cc41aeeebade7800d40da26935c7894eb4dad9e7d
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNjM5MjM5NTU3LCJleHAiOjE5NTQ4MDM1NTd9._1tTpif1aCfMhaNrnQvNmkt8_8F_JPLnXsKEj9w-b3M
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJvbGUiOiJzZXJ2aWNlX3JvbGUiLCJpYXQiOjE2MzkyMzk1NTcsImV4cCI6MTk1NDgwMzU1N30.XtnTTwNN4ui8-YD-voPlVeNs9Bom-NimIyBSecGFdhw
DASHBOARD_USERNAME=ddbaaca61955d4e9
DASHBOARD_PASSWORD=85je8kD6XcE6RgP9w69xALgZE8qx17
POOLER_TENANT_ID=7372

############
# [required]
# Neo4j username and password
# Replace "neo4j" with your chosen username and "password" with your chosen password.
# Keep the "/" as a separator between the two.
############

NEO4J_AUTH=neo4j/2wDomdHja4npNPJCBqSr09EMDBAfM0Wd

############
# [required]
# Langfuse credentials
# Each of the secret keys you can set to whatever you want, just make it secure!
# For the encryption key, use the command `openssl rand -hex 32`
#   openssl is available by defualt on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
############

CLICKHOUSE_PASSWORD=YF2sfvzkwr65NtALkMHwJt9VyZgn4Mo
MINIO_ROOT_PASSWORD=Xl7GnMVb5KyBnyMOdVNkj0fVvvptlp3
LANGFUSE_SALT=65b956d75f78395437e2cf0326a50ec13c3ea413edb6f0303feffd50588a99e8
NEXTAUTH_SECRET=a60e2899d3ade29debd080d22774d023f09801d816ec081ebb5c1c3145deca95
ENCRYPTION_KEY=0d321cb983fec76e529bd2159c0545fcc8bd36713055cebc38b0b53c5203d5b5

############
# [required for prod]
# Caddy Config

# By default listen on https://localhost:[service port] and don't use an email for SSL
# To change this for production:
# Uncomment all of these environment variables for the services you want exposed
# Note that you might not want to expose Ollama or SearXNG since they aren't secured by default
# Replace the placeholder value with the host for each service (like n8n.yourdomain.com)
# Replace internal by your email (require to create a Let's Encrypt certificate)
############

# N8N_HOSTNAME=n8n.yourdomain.com
# WEBUI_HOSTNAME=openwebui.yourdomain.com
# FLOWISE_HOSTNAME=flowise.yourdomain.com
# SUPABASE_HOSTNAME=supabase.yourdomain.com
# LANGFUSE_HOSTNAME=langfuse.yourdomain.com
# OLLAMA_HOSTNAME=ollama.yourdomain.com
# SEARXNG_HOSTNAME=searxng.yourdomain.com
# NEO4J_HOSTNAME=neo4j.yourdomain.com
# LETSENCRYPT_EMAIL=internal


# Everything below this point is optional.
# Default values will suffice unless you need more features/customization.

   #
   #
#######
 #####
   #

############
# Optional Google Authentication for Supabase
# Get these values from the Google Admin Console
############
# ENABLE_GOOGLE_SIGNUP=true
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GOOGLE_REDIRECT_URI=

############
# Optional SearXNG Config
# If you run a very small or a very large instance, you might want to change the amount of used uwsgi workers and threads per worker
# More workers (= processes) means that more search requests can be handled at the same time, but it also causes more resource usage
############

 SEARXNG_UWSGI_WORKERS=4
 SEARXNG_UWSGI_THREADS=4

############
# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres
POSTGRES_USER=postgres

############
# Supavisor -- Database pooler and others that can be left as default values
############
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE=8477ebb797372d2d4752abde11bdee697dd45405c9cfca8ad79a48b11a9030df07d9ff2ecd43c5f6d8490bf073d83eb1d403383d11e3009f28e95cf1d5ea9c37
VAULT_ENC_KEY=4efce97981253536c004901f28dd491b3d9ed56303e93e29716006e76e9ee351
# Pool size for internal metadata storage used by Supavisor
# This is separate from client connections and used only by Supavisor itself
POOLER_DB_POOL_SIZE=5


############
# API Proxy - Configuration for the Kong Reverse proxy.
############

KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443


############
# API - Configuration for PostgREST.
############

PGRST_DB_SCHEMAS=public,storage,graphql_public

############
# Flowise - Authentication Configuration for Flowise.
############
#FLOWISE_USERNAME=cbwinslow
#FLOWISE_PASSWORD=123qweasd


############
# Auth - Configuration for the GoTrue authentication server.
############

## General
SITE_URL=http://localhost:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://localhost:8000

## Mailer Config
MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=true
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=supabase-mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender
ENABLE_ANONYMOUS_USERS=false

## Phone auth
ENABLE_PHONE_SIGNUP=true
ENABLE_PHONE_AUTOCONFIRM=true


############
# Studio - Configuration for the Dashboard
############

STUDIO_DEFAULT_ORGANIZATION=Default Organization
STUDIO_DEFAULT_PROJECT=Default Project

STUDIO_PORT=3000
# replace if you intend to use Studio outside of localhost
SUPABASE_PUBLIC_URL=http://localhost:8000

# Enable webp support
IMGPROXY_ENABLE_WEBP_DETECTION=true

# Add your OpenAI API key to enable SQL Editor Assistant
OPENAI_API_KEY=


############
# Functions - Configuration for Functions
############
# NOTE: VERIFY_JWT applies to all functions. Per-function VERIFY_JWT is not supported yet.
FUNCTIONS_VERIFY_JWT=false


############
# Logs - Configuration for Analytics
# Please refer to https://supabase.com/docs/reference/self-hosting-analytics/introduction
############

# Change vector.toml sinks to reflect this change
# these cannot be the same value
LOGFLARE_PUBLIC_ACCESS_TOKEN=48b36241bbe842c3116e3ffc291a9a348313c6737984e8a3f78d9e87eb5f7c42
LOGFLARE_PRIVATE_ACCESS_TOKEN=2391ecdd6f15442050b348406d512c52e7bedeb79932f5731595163ccb0d05ba

# Docker socket location - this value will differ depending on your OS
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Google Cloud Project details
GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID
GOOGLE_PROJECT_NUMBER=GOOGLE_PROJECT_NUMBER

############
# Additional Required Variables for Services
############
GRAYLOG_PASSWORD=GQk1JmVCwoIfyK8PhzK9HIbYXkjg8lD
GRAYLOG_ROOT_PASSWORD_SHA2=d9c1a2d3a1122bd91aff4bf1fc7d733934d3cff4ea8ea0f2a29384818fa93baf
RABBITMQ_USER=13ed7b823e489651
RABBITMQ_PASS=g4sANbKnr5MkdXVHBJWnmdz8pQlILZM
FLOWISE_USERNAME=4dd953220da59b5d
FLOWISE_PASSWORD=zqEDpDMvyMwHf95M8ysHErNmsNEYSsXw
LOCALAI_API_KEY=f50132c0259b118339f13699bfd207254bb571dd3c8bdd6f84004d2bfc45a8bb
