version: '3.8'

volumes:
  kong_data:
  kong_postgres_data:

networks:
  kong-net:
    driver: bridge

services:
  # Kong API Gateway
  kong-database:
    image: postgres:13
    container_name: kong-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD:-kong_password}
    volumes:
      - kong_postgres_data:/var/lib/postgresql/data
    networks:
      - kong-net
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong -d kong"]
      interval: 30s
      timeout: 10s
      retries: 3

  kong-migration:
    image: kong:3.4-alpine
    container_name: kong-migration
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong_password}
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: "no"

  kong:
    image: kong:3.4-alpine
    container_name: kong
    restart: unless-stopped
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong_password}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000"   # Kong proxy port
      - "8001:8001"   # Kong admin API port
      - "8443:8443"   # Kong proxy SSL port
      - "8444:8444"   # Kong admin SSL port
    networks:
      - kong-net
      - default
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: unless-stopped
    depends_on:
      - kong
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ${KONG_DB_PASSWORD:-kong_password}
      DB_DATABASE: kong
      NODE_ENV: production
      TOKEN_SECRET: ${KONG_TOKEN_SECRET:-some_secret_token}
    ports:
      - "1337:1337"
    networks:
      - kong-net
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/"]
      interval: 30s
      timeout: 10s
      retries: 3