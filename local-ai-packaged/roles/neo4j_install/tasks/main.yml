---
- name: Add Neo4j GPG key
  apt_key:
    url: https://debian.neo4j.com/neotechnology.gpg.key
    state: present
  become: true

- name: Add Neo4j APT repository
  apt_repository:
    repo: "deb https://debian.neo4j.com stable latest"
    state: present
    filename: neo4j
  become: true

- name: Install Neo4j
  apt:
    name: neo4j={{ neo4j_version }}
    state: present
    update_cache: true
  become: true

- name: Start and enable Neo4j service
  systemd:
    name: neo4j
    state: started
    enabled: true
  become: true

- name: Wait for Neo4j to be ready
  wait_for:
    port: "{{ neo4j_bolt_port }}"
    host: localhost
    delay: 10
    timeout: 60
  become: true

- name: Set Neo4j initial password
  shell: |
    echo "{{ neo4j_password }}" | neo4j-admin set-initial-password "{{ neo4j_password }}"
  become: true
  become_user: neo4j
  no_log: true
  changed_when: false

- name: Configure Neo4j for remote access
  lineinfile:
    path: /etc/neo4j/neo4j.conf
    regexp: '^dbms.default_listen_address=0.0.0.0'
    line: 'dbms.default_listen_address=0.0.0.0'
    backup: yes
  become: true
  notify: restart neo4j

- name: Create Neo4j data directory
  file:
    path: "{{ neo4j_data_path }}"
    state: directory
    owner: neo4j
    group: neo4j
    mode: '0755'
  become: true

- name: Copy OpenLegislation schema Cypher script
  copy:
    src: "{{ openlegislation_schema_cypher }}"
    dest: /tmp/openlegislation-schema.cypher
    mode: '0644'
  become: true
  when: openlegislation_schema_cypher is defined

- name: Apply OpenLegislation schema to Neo4j
  shell: |
    cypher-shell -u neo4j -p "{{ neo4j_password }}" < /tmp/openlegislation-schema.cypher
  become: true
  become_user: neo4j
  no_log: true
  when: openlegislation_schema_cypher is defined

- name: Restart Neo4j after config changes
  systemd:
    name: neo4j
    state: restarted
  become: true
  listen: restart neo4j